version: "3.3"

services:
  config-container:
    env_file: settings.env
    build:
      context: ./config
    volumes:
      - config-volume:/config

  scalyr:
    image: openlmis/scalyr
    env_file: settings.env
    volumes:
      - config-volume:/config
      - ${SCALYR_DOCKER_SOCK}:/var/scalyr/docker.sock
      - syslog:/var/log/reporting
      - 'nifi-log:/var/log/nifi'
      - 'log:/var/log/nginx'
      - 'superset-log:/var/log/superset-logs'

  nginx:
    image: openlmis/nginx:${OL_NGINX_VERSION}
    ports:
      - "${NIFI_WEB_PORT}:${NIFI_WEB_PORT}"
      - "${SUPERSET_WEB_PORT}:${SUPERSET_WEB_PORT}"
    env_file: settings.env
    environment:
      NGINX_LOG_DIR: '/var/log/nginx/log'
      NIFI_WEB_PORT: "${NIFI_WEB_PORT}"
      SUPERSET_WEB_PORT: "${SUPERSET_WEB_PORT}"
    volumes:
      - config-volume:/config
      - 'log:/var/log/nginx/log'
    command: >
      sh -c "cp -f /config/nginx/nginx.tmpl /etc/nginx/nginx.tmpl
      && . /config/nginx/set-authorization.sh
      && . /etc/nginx/run_with_template.sh"
    depends_on: [config-container]

  nifi:
    image: apache/nifi:${OL_NIFI_VERSION}
    ports:
      - "8080"
    volumes:
      - config-volume:/config
      - ./nifi-cache:/tmp/nifi-docker-cache
      - 'nifi-log:/opt/nifi/nifi-current/logs'
    entrypoint: >
      bash -c "/config/nifi/scripts/start.sh ${OL_NIFI_VERSION}"
    environment:
      - NIFI_JVM_HEAP_INIT=${NIFI_JVM_HEAP_INIT}
      - NIFI_JVM_HEAP_MAX=${NIFI_JVM_HEAP_MAX}
    depends_on: [config-container, nginx]
    env_file: settings.env

  db-service-configuration:
    build:
      context: ./db
    volumes:
      - db-config-volume:/docker-entrypoint-initdb.d

  db:
    image: openlmis/postgres:${OL_POSTGRES_VERSION}
    env_file: settings.env
    volumes:
      - db-config-volume:/docker-entrypoint-initdb.d
      - pgdata:/var/lib/postgresql/data
    ports:
      - "${REPORTING_POSTGRES_PORT:-5432}:5432"
    logging:
      driver: syslog
      options:
        syslog-address: "udp://127.0.0.1:${SYSLOG_UDP_PORT}"
    depends_on: [db-service-configuration]

  superset:
    build:
      context: ./superset
      args:
        SUPERSET_VERSION: ${OL_SUPERSET_VERSION}
        SUPERSET_PATCHUP_VERSION: ${OL_SUPERSET_PATCHUP_VERSION}
    ports:
      - "8088"
    volumes:
      - config-volume:/config
      - 'superset-log:/var/log/superset-logs'
    command: >
      bash -c "cp -r /config/superset /etc/
      && sh /etc/superset/init.sh"
    logging:
      driver: syslog
      options:
        syslog-address: "udp://127.0.0.1:${SYSLOG_UDP_PORT}"
    depends_on: [db, config-container]
    env_file: settings.env

volumes:
  syslog:
    external: false
  config-volume:
    external: false
  db-config-volume:
    external: false
  pgdata:
    external: true
